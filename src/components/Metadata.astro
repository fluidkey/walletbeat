---
// Types/constants
import { betaImagesRoot } from '@/constants';

type Icon = {
  url: string;
  sizes?: string;
};
type MetadataConfig = {
  title: string;
  icons?: Icon[];
  description?: string;
  keywordsBefore?: string[];
  keywordsAfter?: string[];
};

const siteName = 'Walletbeat';
const siteDescription = 'Walletbeat is an Ethereum wallet rating site. It aims to provide a trustworthy, up-to-date source of information about the state of the Ethereum wallet ecosystem';
const defaultKeywords = ['walletbeat', 'ethereum', 'wallet', 'wallets', 'wallet beat', 'evm'];
const defaultIcons: Icon[] = [
  {
    url: `${betaImagesRoot}/favicon.ico`,
    sizes: '16x16',
  },
  {
    url: `${betaImagesRoot}/icon.jpg`,
  },
];
const locale = 'en-US';


// Functions
const generateBasicMetadata = ({
  title,
  description,
  icons,
  keywordsBefore,
  keywordsAfter,
}: MetadataConfig) => ({
  title,
  applicationName: siteName,
  description: description ?? siteDescription,
  keywords: [
    ...(keywordsBefore ?? []),
    ...defaultKeywords,
    ...(keywordsAfter ?? []),
  ],
  icons: icons ?? defaultIcons,
  openGraph: {
    type: 'website',
    determiner: '',
    title,
    description: description ?? siteDescription,
    siteName,
    locale,
  },
});


// Props
type Props = {
  metadata: MetadataConfig;
};

const {
  metadata: rawMetadata,
} = Astro.props;

const metadata = generateBasicMetadata(rawMetadata);
---


<title>{metadata.title}</title>
<meta name="application-name" content={metadata.applicationName}>
<meta name="description" content={metadata.description} />
<meta name="keywords" content={metadata.keywords.join(', ')} />
{metadata.icons.map(icon => (
  <link rel="icon" href={icon.url} sizes={icon.sizes} />
))}
<meta property="og:type" content={metadata.openGraph.type} />
<meta property="og:determiner" content={metadata.openGraph.determiner} />
<meta property="og:title" content={metadata.openGraph.title} />
<meta property="og:description" content={metadata.openGraph.description} />
<meta property="og:siteName" content={metadata.openGraph.siteName} />
<meta property="og:locale" content={metadata.openGraph.locale} />
